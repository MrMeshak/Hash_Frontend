import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { useEffect } from 'react'
import  {useSelector} from 'react-redux'
import { useAppDispatch, useAppSelector } from '../store/hooks'
import { axiosGql, getLibraryQuery } from '../services/gqlApi'

import NavBar from '../components/navigation/navbar/NavBar'
import { wrapper } from '../store/store'
import { selectUser } from '../store/hooks'
import { currentUser } from '../store/user/userSlice'
import { userActions } from '../store/user/userSlice'
import { getLibrary } from '../store/library/librarySlice'
import LibraryBar from '../components/library/libraryBar/LibraryBar'
import PostList from '../components/library/postList/PostList'

const Home: NextPage = (props) => {
  const user = useAppSelector(selectUser())
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <NavBar/>
      <LibraryBar/>
      <PostList/>
    </div>
  )
}

export const getServerSideProps = wrapper.getServerSideProps( (store) => async (context) => {
  console.log('cookies',context.req.cookies)
  const authToken = context.req.cookies.authToken 
  if(!!authToken){
    await store.dispatch(currentUser({authToken: authToken }))
    await store.dispatch(getLibrary({authToken: authToken})) 
  }else{
    await store.dispatch(getLibrary({authToken: ""})) 
  }
  
  console.log('State on server', store.getState());

  return {
    props: {key: {}}
  }
})

export default Home
